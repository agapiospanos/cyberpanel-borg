#!/bin/bash

# This config file set the global variables for all backup and restore scripts.

##### What to backup #####
# NOTE: avoid trailing slashes (/ in the end of the dirs)
HOME_DIR=/home            # Where user directories are placed
SCRIPTS_DIR=/root/scripts # Where you have some custom scripts that you want to backup (optional)
ETC_DIR=/etc              # Server level config files

##### Email config #####
ADMIN_EMAIL=youremail@domain.com
EMAIL_FROM_NAME=YourServerName
EMAIL_FROM_EMAIL=server@yourdomain.com

##### What NOT to backup #####
# Put here the websites inside /home dir that you dont want to backup, separated by comma (e.g. "domain1.com,domain2.com")
EXCLUDED_WEBSITES=

##### Where to backup #####
# Leave these SSH variables empty in case you want to have a local backup
# NOTE: If you use an ssh storage you have to setup passwordless access by adding your public key to its authorized_keys
# Hetzner StorageBoxes are also supported. Example config below. More info here https://community.hetzner.com/tutorials/install-and-configure-borgbackup
SSH_USER=u123456
SSH_HOST=u123456.your-storagebox.de
SSH_PORT=23
SSH_DESTINATION="ssh:$SSH_USER//@$SSH_HOST:$SSH_PORT/."

# This is used as a helper to send sftp commands if you are using an ssh backup destination
# There is nothing to change here
SFTP_PIPE_OPTIONS="-b - -oPort=$SSH_PORT $SSH_USER@$SSH_HOST"

BACKUP_DIR=/backups/yourservername # Global backup directory, inside this dir the script creates the different repo dirs.
ARCHIVE_DIR=$BACKUP_DIR/offline    # This is where offline users / archived users are stored. Incremental backups will not execute in archived users.
EXPORT_DIR=$BACKUP_DIR/export      # This is used to export the tar.gz from the backups when you request an export-tar and you don't provide an export dir argument

# This is where individual users repositories will be created
REPO_DOMAINS_DIR=$BACKUP_DIR/borg/domains
REPO_DB_DIR=$BACKUP_DIR/borg/db
REPO_EMAILS_DIR=$BACKUP_DIR/borg/emails

# Sever level repositories
REPO_SCRIPTS=$BACKUP_DIR/borg/scripts
REPO_ETC=$BACKUP_DIR/borg/etc

##### How many backups to keep (-1 for infinite) #####
BACKUP_DAYS=90
BACKUP_WEEKS=24
BACKUP_MONTHS=-1

##### Dir names #####
PUBLIC_HTML_DIR_NAME=public_html
DB_DUMP_DIR_NAME=db_dump # This is where databases are temporarily dumped before backup takes place

##### BORG config #####
# Encryption mode should be "none" or "repokey-blake2" or "repokey"
# repokey-blake2 is faster than repokey for modern CPUs
# none is the fastest but no security
ENCRYPTION_MODE="repokey-blake2"

export BORG_PASSPHRASE="change_me_to_a_secret_value"

OPTIONS_INIT="--encryption=$ENCRYPTION_MODE --make-parent-dirs"

# Compression type
# Default is lz4, very fast and ok compression ratio.
# zstd is more modern and better compression ratio
# if you want to use zstd compression instead, add the "--compression zstd" argument to borg create
OPTIONS_CREATE="-sv --exclude-caches"

OPTIONS_PRUNE="-v --keep-daily=$BACKUP_DAYS --keep-weekly=$BACKUP_WEEKS --keep-monthly=$BACKUP_MONTHS"

OPTIONS_EXPORT="--tar-filter=\"gzip -9\""

export BORG_UNKNOWN_UNENCRYPTED_REPO_ACCESS_IS_OK=yes # Leave yes if when you run the script via cron to avoid missing borg cache files.

export HOME=/root # Sometimes when you run via cron, you need to export home directory, so borg can find cache files
